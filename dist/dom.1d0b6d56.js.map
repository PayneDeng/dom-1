{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","console","log","nextSibling","parentNode","insertBefore","before","append","parent","appendChild","warp","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","setAttribute"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACXC,EAAAA,MADW,kBACJC,MADI,EACI;AACb,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAsBJ,MAAM,CAACK,IAAP,EAAtB;AACA,WAAOJ,SAAS,CAACK,OAAV,CAAkBC,UAAzB;AACD,GALU;AAMXC,EAAAA,KANW,iBAMLC,IANK,EAMCC,KAND,EAMQ;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,WAAjB;AACAJ,IAAAA,IAAI,CAACK,UAAL,CAAgBC,YAAhB,CAA6BL,KAA7B,EAAoCD,IAAI,CAACI,WAAzC;AACD,GATU;AAUXG,EAAAA,MAVW,kBAUJP,IAVI,EAUEC,KAVF,EAUS;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,WAAjB;AACAJ,IAAAA,IAAI,CAACK,UAAL,CAAgBC,YAAhB,CAA6BL,KAA7B,EAAoCD,IAApC;AACD,GAbU;AAcXQ,EAAAA,MAdW,kBAcJC,MAdI,EAcIT,IAdJ,EAcU;AACnBS,IAAAA,MAAM,CAACC,WAAP,CAAmBV,IAAnB;AACD,GAhBU;AAiBXW,EAAAA,IAjBW,gBAiBNX,IAjBM,EAiBAS,MAjBA,EAiBQ;AACjBpB,IAAAA,GAAG,CAACkB,MAAJ,CAAWP,IAAX,EAAiBS,MAAjB;AACApB,IAAAA,GAAG,CAACmB,MAAJ,CAAWC,MAAX,EAAmBT,IAAnB;AACD,GApBU;AAqBXY,EAAAA,MArBW,kBAqBJZ,IArBI,EAqBE;AACXA,IAAAA,IAAI,CAACK,UAAL,CAAgBQ,WAAhB,CAA4Bb,IAA5B;AACA,WAAOA,IAAP;AACD,GAxBU;AAyBXc,EAAAA,KAzBW,iBAyBLd,IAzBK,EAyBC;AAAA,QACHe,UADG,GACWf,IADX,CACHe,UADG;AAEV,QAAMC,KAAK,GAAG,EAAd;AACA,QAAIC,CAAC,GAAGjB,IAAI,CAACF,UAAb;;AACA,WAAMmB,CAAN,EAAQ;AACND,MAAAA,KAAK,CAACE,IAAN,CAAW7B,GAAG,CAACuB,MAAJ,CAAWZ,IAAI,CAACF,UAAhB,CAAX;AACAmB,MAAAA,CAAC,GAAGjB,IAAI,CAACF,UAAT;AACD;;AACD,WAAOkB,KAAP;AACD,GAlCU;AAmCXG,EAAAA,IAnCW,gBAmCNnB,IAnCM,EAmCDoB,IAnCC,EAmCIC,KAnCJ,EAmCU;AACnBrB,IAAAA,IAAI,CAACsB,YAAL,CAAkBF,IAAlB,EAAuBC,KAAvB;AACD;AArCU,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  create(string) {\r\n    const container = document.createElement(\"template\");\r\n    container.innerHTML = string.trim();\r\n    return container.content.firstChild;\r\n  },\r\n  after(node, node2) {\r\n    console.log(node.nextSibling);\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n  },\r\n  before(node, node2) {\r\n    console.log(node.nextSibling);\r\n    node.parentNode.insertBefore(node2, node);\r\n  },\r\n  append(parent, node) {\r\n    parent.appendChild(node);\r\n  },\r\n  warp(node, parent) {\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n  },\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  empty(node) {\r\n    const {childNodes} = node;\r\n    const array = [];\r\n    let x = node.firstChild\r\n    while(x){\r\n      array.push(dom.remove(node.firstChild))\r\n      x = node.firstChild\r\n    }\r\n    return array;\r\n  },\r\n  attr(node,name,value){\r\n    node.setAttribute(name,value)\r\n  }\r\n};\r\n"]}